import Message, { MessageType, ReturnCode } from "../dist/nodejs/nodejs";

it("normal query", () => {
    const request = new Message(43825);
    request.addQuestion("www.example.com");
    const encodedRequest = request.encode();
    expect(Array.from(encodedRequest)).toEqual([0xab, 0x31, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x77, 0x77, 0x77, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x01, 0x00, 0x01]);

    const decodedRequest = Message.parse(encodedRequest.buffer as ArrayBuffer);
    expect(decodedRequest).toEqual(request);

    decodedRequest.type = MessageType.response;
    decodedRequest.recursionAvailable = true;
    decodedRequest.addAddress("www.example.com", 20680, "93.184.216.34");

    const encodedAnswer = decodedRequest.encode();
    expect(Array.from(encodedAnswer)).toEqual([0xab, 0x31, 0x81, 0x80, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x77, 0x77, 0x77, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x01, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x50, 0xc8, 0x00, 0x04, 0x5d, 0xb8, 0xd8, 0x22]);

    const decodedAnswer = Message.parse(encodedAnswer.buffer as ArrayBuffer);
    expect(decodedAnswer).toEqual(decodedRequest);
});

it("name not found query", () => {
    const request = new Message(0x7203);
    request.addQuestion("www.example.comy");
    const encodedRequest = request.encode();
    expect(Array.from(encodedRequest)).toEqual([0x72, 0x03, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x77, 0x77, 0x77, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x04, 0x63, 0x6f, 0x6d, 0x79, 0x00, 0x00, 0x01, 0x00, 0x01]);

    const decodedRequest = Message.parse(encodedRequest.buffer as ArrayBuffer);
    expect(decodedRequest).toEqual(request);

    decodedRequest.type = MessageType.response;
    decodedRequest.recursionAvailable = true;
    decodedRequest.returnCode = ReturnCode.nameError;

    const encodedAnswer = decodedRequest.encode();
    expect(Array.from(encodedAnswer)).toEqual([0x72, 0x03, 0x81, 0x83, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x77, 0x77, 0x77, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x04, 0x63, 0x6f, 0x6d, 0x79, 0x00, 0x00, 0x01, 0x00, 0x01]);

    const decodedAnswer = Message.parse(encodedAnswer.buffer as ArrayBuffer);
    expect(decodedAnswer).toEqual(decodedRequest);
});
